import{_ as a,c as t,a2 as n,o as r}from"./chunks/framework.DPuwY6B9.js";const N=JSON.parse('{"title":"SDN","description":"","frontmatter":{"prev":false,"next":false},"headers":[],"relativePath":"sdn/index.md","filePath":"sdn/index.md"}'),d={name:"sdn/index.md"};function i(s,e,o,l,p,c){return r(),t("div",null,e[0]||(e[0]=[n('<h1 id="sdn" tabindex="-1">SDN <a class="header-anchor" href="#sdn" aria-label="Permalink to &quot;SDN&quot;">​</a></h1><p>Software Defined Network，软件定义网络。</p><h2 id="什么是-sdn" tabindex="-1">什么是 SDN <a class="header-anchor" href="#什么是-sdn" aria-label="Permalink to &quot;什么是 SDN&quot;">​</a></h2><p>SDN 旨在赋予网络灵活性和敏捷性。利用 SDN 设计、构建和管理网络，可以实现控制平面和数据平面的分离。这样一来，我们就能够直接对控制平面进行编程，并对用于应用和网络服务的底层基础设施进行抽象化。</p><p>通过可编程的 SDN 控制器，⁪网络情报可在逻辑上实现集中化。这些控制器以软件形式实施，可在网络域中保持一致。对应用和策略引擎而言，SDN 就像是一个逻辑交换机。</p><h2 id="sdn-组成部分" tabindex="-1">SDN 组成部分 <a class="header-anchor" href="#sdn-组成部分" aria-label="Permalink to &quot;SDN 组成部分&quot;">​</a></h2><p>SDN 提供一个可编程的集中式网络，其中包含 SDN 控制器、南向 API 和北向 API。</p><ul><li>SDN 控制器 是网络的核心，提供针对整个网络的集中视图。</li><li>南向 API 可将信息转发至网络中的交换机和路由器。</li><li>北向 API 用于实现应用通信和服务部署。</li></ul>',8)]))}const S=a(d,[["render",i]]);export{N as __pageData,S as default};
