import{_ as e,c as s,o as n,ag as l}from"./chunks/framework.BZemHgQ6.js";const h=JSON.parse('{"title":"Redis","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"db/redis.md","filePath":"db/redis.md"}'),t={name:"db/redis.md"};function i(o,a,p,d,c,u){return n(),s("div",null,a[0]||(a[0]=[l(`<h1 id="redis" tabindex="-1">Redis <a class="header-anchor" href="#redis" aria-label="Permalink to &quot;Redis&quot;">​</a></h1><p>Redis 诞生于 2009 年，全称是 <span style="color:red;">Re</span>mote <span style="color:red;">Di</span>ctionary <span style="color:red;">S</span>erver。</p><h2 id="_1-通用命令" tabindex="-1">1 通用命令 <a class="header-anchor" href="#_1-通用命令" aria-label="Permalink to &quot;1 通用命令&quot;">​</a></h2><h3 id="_1-1-keys" tabindex="-1">1.1 <code>KEYS</code> <a class="header-anchor" href="#_1-1-keys" aria-label="Permalink to &quot;1.1 \`KEYS\`&quot;">​</a></h3><ul><li>语法：<code>KEYS pattern</code></li><li>功能：查看复合模版的所有 <code>key</code>，不建议在生产环境使用</li><li>时间复杂度：<code>O(N)</code>，其中 <code>N</code> 是数据库中的键数</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; MSET firstname Jack lastname Stuntman age 35</span></span>
<span class="line"><span>&quot;OK&quot;</span></span>
<span class="line"><span>redis&gt; KEYS *name*</span></span>
<span class="line"><span>1) &quot;firstname&quot;</span></span>
<span class="line"><span>2) &quot;lastname&quot;</span></span>
<span class="line"><span>redis&gt; KEYS a??</span></span>
<span class="line"><span>1) &quot;age&quot;</span></span>
<span class="line"><span>redis&gt; KEYS *</span></span>
<span class="line"><span>1) &quot;age&quot;</span></span>
<span class="line"><span>2) &quot;firstname&quot;</span></span>
<span class="line"><span>3) &quot;lastname&quot;</span></span></code></pre></div><h3 id="_1-2-del" tabindex="-1">1.2 <code>DEL</code> <a class="header-anchor" href="#_1-2-del" aria-label="Permalink to &quot;1.2 \`DEL\`&quot;">​</a></h3><ul><li>语法：<code>DEL key [key ...]</code></li><li>功能：删除指定的 <code>key</code>，如果 <code>key</code> 不存在则忽略</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; SET key1 &quot;Hello&quot;</span></span>
<span class="line"><span>&quot;OK&quot;</span></span>
<span class="line"><span>redis&gt; SET key2 &quot;World&quot;</span></span>
<span class="line"><span>&quot;OK&quot;</span></span>
<span class="line"><span>redis&gt; DEL key1 key2 key3</span></span>
<span class="line"><span>(integer) 2</span></span></code></pre></div><h3 id="_1-3-exists" tabindex="-1">1.3 <code>EXISTS</code> <a class="header-anchor" href="#_1-3-exists" aria-label="Permalink to &quot;1.3 \`EXISTS\`&quot;">​</a></h3><ul><li>语法：<code>EXISTS key [key ...]</code></li><li>功能：判断指定的 <code>key</code> 是否存在</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; SET key1 &quot;Hello&quot;</span></span>
<span class="line"><span>&quot;OK&quot;</span></span>
<span class="line"><span>redis&gt; EXISTS key1</span></span>
<span class="line"><span>(integer) 1</span></span>
<span class="line"><span>redis&gt; EXISTS nosuchkey</span></span>
<span class="line"><span>(integer) 0</span></span>
<span class="line"><span>redis&gt; SET key2 &quot;World&quot;</span></span>
<span class="line"><span>&quot;OK&quot;</span></span>
<span class="line"><span>redis&gt; EXISTS key1 key2 nosuchkey</span></span>
<span class="line"><span>(integer) 2</span></span></code></pre></div><h3 id="_1-4-expire" tabindex="-1">1.4 <code>EXPIRE</code> <a class="header-anchor" href="#_1-4-expire" aria-label="Permalink to &quot;1.4 \`EXPIRE\`&quot;">​</a></h3><ul><li>语法：<code>EXPIRE key seconds</code></li><li>功能：设置 <code>key</code> 的过期时长</li></ul><h3 id="_1-5-ttl" tabindex="-1">1.5 <code>TTL</code> <a class="header-anchor" href="#_1-5-ttl" aria-label="Permalink to &quot;1.5 \`TTL\`&quot;">​</a></h3><ul><li>语法：<code>TTL key</code></li><li>功能：查看指定 <code>key</code> 的剩余有效时长（秒）</li></ul><p>如果 <code>key</code> 存在但是没有设置过期时长，返回 <code>-1</code>。如果 <code>key</code> 不存在返回 <code>-2</code>。</p><h2 id="_2-string-类型" tabindex="-1">2 String 类型 <a class="header-anchor" href="#_2-string-类型" aria-label="Permalink to &quot;2 String 类型&quot;">​</a></h2><p>String 类型，也就是字符串类型，是 Redis 中最简单的存储类型。</p><p>其 value 是字符串，不过根据字符串的格式不同，又可以分为 3 类：</p><ul><li>string：普通字符串</li><li>int：整数类型，可以进行自增自减</li><li>float：浮点类型，可以进行自增自减</li></ul><p>不管哪种格式，底层都是字节数组形式存储，只不过是编码方式不同。字符串类型的最大空间不能超过 512m</p><h3 id="_2-1-set" tabindex="-1">2.1 <code>SET</code> <a class="header-anchor" href="#_2-1-set" aria-label="Permalink to &quot;2.1 \`SET\`&quot;">​</a></h3><ul><li>语法：<code>SET key value [NX | XX] [EX seconds | KEEPTTL]</code></li><li>功能：添加或修改一个 String 类型的键值对</li><li>可选项： <ul><li><code>NX</code>：只有 <code>key</code> 不存在时才设置</li><li><code>XX</code>：只有 <code>key</code> 已存在时才设置</li><li><code>EX</code>：设置过期时长</li><li><code>KEEPTTL</code>：保留 <code>key</code> 原有的过期时长</li></ul></li></ul><h3 id="_2-2-get" tabindex="-1">2.2 <code>GET</code> <a class="header-anchor" href="#_2-2-get" aria-label="Permalink to &quot;2.2 \`GET\`&quot;">​</a></h3><ul><li>语法：<code>GET key</code></li><li>功能：根据 <code>key</code> 获取 String 类型的 <code>value</code></li></ul><h3 id="_2-3-mset" tabindex="-1">2.3 <code>MSET</code> <a class="header-anchor" href="#_2-3-mset" aria-label="Permalink to &quot;2.3 \`MSET\`&quot;">​</a></h3><ul><li>语法：<code>MSET key value [key value ...]</code></li><li>功能：批量添加多个 String 类型的键值对</li></ul><h3 id="_2-4-mget" tabindex="-1">2.4 <code>MGET</code> <a class="header-anchor" href="#_2-4-mget" aria-label="Permalink to &quot;2.4 \`MGET\`&quot;">​</a></h3><ul><li>语法：<code>MGET key [key ...]</code></li><li>功能：批量获取多个 <code>key</code> 的 <code>value</code></li></ul><h3 id="_2-5-incr" tabindex="-1">2.5 <code>INCR</code> <a class="header-anchor" href="#_2-5-incr" aria-label="Permalink to &quot;2.5 \`INCR\`&quot;">​</a></h3><ul><li>语法：<code>INCR key</code></li><li>功能：整型自增 <code>1</code></li></ul><h3 id="_2-6-incrby" tabindex="-1">2.6 <code>INCRBY</code> <a class="header-anchor" href="#_2-6-incrby" aria-label="Permalink to &quot;2.6 \`INCRBY\`&quot;">​</a></h3><ul><li>语法：<code>INCRBY key increment</code></li><li>功能：整型自增 <code>increment</code></li></ul><h3 id="_2-7-incrbyfloat" tabindex="-1">2.7 <code>INCRBYFLOAT</code> <a class="header-anchor" href="#_2-7-incrbyfloat" aria-label="Permalink to &quot;2.7 \`INCRBYFLOAT\`&quot;">​</a></h3><ul><li>语法：<code>INCRBYFLOAT key increment</code></li><li>功能：浮点型自增 <code>increment</code></li></ul><h3 id="_2-8-setnx" tabindex="-1">2.8 <code>SETNX</code> <a class="header-anchor" href="#_2-8-setnx" aria-label="Permalink to &quot;2.8 \`SETNX\`&quot;">​</a></h3><blockquote><p>弃用，推荐采用 <code>SET key value NX</code></p></blockquote><ul><li>语法：<code>SETNX key value</code></li><li>功能：如果 <code>key</code> 不存在才新增。</li></ul><p><code>SETNX</code> 是 <strong>SET</strong> if <strong>N</strong>ot e<strong>X</strong>ists 的简写。</p><h3 id="_2-9-setex" tabindex="-1">2.9 <code>SETEX</code> <a class="header-anchor" href="#_2-9-setex" aria-label="Permalink to &quot;2.9 \`SETEX\`&quot;">​</a></h3><blockquote><p>弃用，推荐采用 <code>SET key value EX seconds</code></p></blockquote><ul><li>语法：<code>SETEX key seconds value</code></li><li>功能：新增 <code>key</code> 并设置有效时长</li></ul><h2 id="_3-key-的层级格式" tabindex="-1">3 Key 的层级格式 <a class="header-anchor" href="#_3-key-的层级格式" aria-label="Permalink to &quot;3 Key 的层级格式&quot;">​</a></h2><p>Redis 的 <code>key</code> 允许有多个单词形成层级结构，多个单词间用 <code>:</code> 隔开。</p><h2 id="_4-hash-类型" tabindex="-1">4 Hash 类型 <a class="header-anchor" href="#_4-hash-类型" aria-label="Permalink to &quot;4 Hash 类型&quot;">​</a></h2><p>Hash 类型，也叫散列，其 <code>value</code> 是一个无需字典，类似于 Java 中的 HashMap 结构。</p><p>String 结构将对象的所有字段保存为一整个字符串，如果要修改其中某个字段很不方便。</p><p>Hash 结构可以将对象中的每次字段独立存储，可以针对单个字段做 CRUD。</p><h3 id="_4-1-hset" tabindex="-1">4.1 <code>HSET</code> <a class="header-anchor" href="#_4-1-hset" aria-label="Permalink to &quot;4.1 \`HSET\`&quot;">​</a></h3><ul><li>语法：<code>HSET key field value [field value ...]</code></li><li>功能：添加或修改 hash 类型 <code>key</code> 的 <code>filed</code> 的值</li></ul><h3 id="_4-2-hget" tabindex="-1">4.2 <code>HGET</code> <a class="header-anchor" href="#_4-2-hget" aria-label="Permalink to &quot;4.2 \`HGET\`&quot;">​</a></h3><ul><li>语法：<code>HGET key field</code></li><li>功能：获取一个 hash 类型 <code>key</code> 的 <code>filed</code> 的值</li></ul><h3 id="_4-3-hmset" tabindex="-1">4.3 <code>HMSET</code> <a class="header-anchor" href="#_4-3-hmset" aria-label="Permalink to &quot;4.3 \`HMSET\`&quot;">​</a></h3><blockquote><p>弃用，采用 <code>HSET</code> 效果一样</p></blockquote><ul><li>语法：<code>HMSET key field value [field value ...]</code></li><li>功能：批量添加多个 hash 类型 <code>key</code> 的 <code>filed</code> 的值</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; HMSET myhash field1 &quot;Hello&quot; field2 &quot;World&quot;</span></span>
<span class="line"><span>&quot;OK&quot;</span></span>
<span class="line"><span>redis&gt; HGET myhash field1</span></span>
<span class="line"><span>&quot;Hello&quot;</span></span>
<span class="line"><span>redis&gt; HGET myhash field2</span></span>
<span class="line"><span>&quot;World&quot;</span></span></code></pre></div><h3 id="_4-4-hmget" tabindex="-1">4.4 <code>HMGET</code> <a class="header-anchor" href="#_4-4-hmget" aria-label="Permalink to &quot;4.4 \`HMGET\`&quot;">​</a></h3><ul><li>语法：<code>HMGET key field [field ...]</code></li><li>功能：批量获取多个 hash 类型 <code>key</code> 的 <code>filed</code> 的值</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; HSET myhash field1 &quot;Hello&quot; field2 &quot;World&quot;</span></span>
<span class="line"><span>(integer) 2</span></span>
<span class="line"><span>redis&gt; HMGET myhash field1 field2 nofield</span></span>
<span class="line"><span>1) &quot;Hello&quot;</span></span>
<span class="line"><span>2) &quot;World&quot;</span></span>
<span class="line"><span>3) (nil)</span></span></code></pre></div><h3 id="_4-5-hgetall" tabindex="-1">4.5 <code>HGETALL</code> <a class="header-anchor" href="#_4-5-hgetall" aria-label="Permalink to &quot;4.5 \`HGETALL\`&quot;">​</a></h3><ul><li>语法：<code>HGETALL key</code></li><li>功能：获取一个 hash 类型的 <code>key</code> 中的所有 <code>filed</code> 和对应 <code>value</code></li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; HSET myhash field1 &quot;Hello&quot; field2 &quot;World&quot;</span></span>
<span class="line"><span>(integer) 2</span></span>
<span class="line"><span>redis&gt; HGETALL myhash</span></span>
<span class="line"><span>1) &quot;field1&quot;</span></span>
<span class="line"><span>2) &quot;Hello&quot;</span></span>
<span class="line"><span>3) &quot;field2&quot;</span></span>
<span class="line"><span>4) &quot;World&quot;</span></span></code></pre></div><h3 id="_4-6-hkeys" tabindex="-1">4.6 <code>HKEYS</code> <a class="header-anchor" href="#_4-6-hkeys" aria-label="Permalink to &quot;4.6 \`HKEYS\`&quot;">​</a></h3><ul><li>语法：<code>HKEYS key</code></li><li>功能：获取一个 hash 类型的 <code>key</code> 中的所有的 <code>filed</code></li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; HSET myhash field1 &quot;Hello&quot; field2 &quot;World&quot;</span></span>
<span class="line"><span>(integer) 2</span></span>
<span class="line"><span>redis&gt; HKEYS myhash</span></span>
<span class="line"><span>1) &quot;field1&quot;</span></span>
<span class="line"><span>2) &quot;field2&quot;</span></span></code></pre></div><h3 id="_4-7-hvals" tabindex="-1">4.7 <code>HVALS</code> <a class="header-anchor" href="#_4-7-hvals" aria-label="Permalink to &quot;4.7 \`HVALS\`&quot;">​</a></h3><ul><li>语法：<code>HVALS key</code></li><li>功能：获取一个 hash 类型的 <code>key</code> 中的所有的 <code>value</code></li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; HSET myhash field1 &quot;Hello&quot; field2 &quot;World&quot;</span></span>
<span class="line"><span>(integer) 2</span></span>
<span class="line"><span>redis&gt; HVALS myhash</span></span>
<span class="line"><span>1) &quot;Hello&quot;</span></span>
<span class="line"><span>2) &quot;World&quot;</span></span></code></pre></div><h3 id="_4-8-hincrby" tabindex="-1">4.8 <code>HINCRBY</code> <a class="header-anchor" href="#_4-8-hincrby" aria-label="Permalink to &quot;4.8 \`HINCRBY\`&quot;">​</a></h3><ul><li>语法：<code>HINCRBY key field increment</code></li><li>功能：让一个 hash 类型的 <code>key</code> 的字段值增加指定步长</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; HSET myhash field 5</span></span>
<span class="line"><span>(integer) 1</span></span>
<span class="line"><span>redis&gt; HINCRBY myhash field 1</span></span>
<span class="line"><span>(integer) 6</span></span>
<span class="line"><span>redis&gt; HINCRBY myhash field -10</span></span>
<span class="line"><span>(integer) -4</span></span></code></pre></div><h3 id="_4-9-hincrby" tabindex="-1">4.9 <code>HINCRBY</code> <a class="header-anchor" href="#_4-9-hincrby" aria-label="Permalink to &quot;4.9 \`HINCRBY\`&quot;">​</a></h3><ul><li>语法：<code>HINCRBY key field increment</code></li><li>功能：让一个 hash 类型的 <code>key</code> 的字段值增加指定步长</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; HSET myhash field 5</span></span>
<span class="line"><span>(integer) 1</span></span>
<span class="line"><span>redis&gt; HINCRBY myhash field 1</span></span>
<span class="line"><span>(integer) 6</span></span>
<span class="line"><span>redis&gt; HINCRBY myhash field -10</span></span>
<span class="line"><span>(integer) -4</span></span></code></pre></div><h3 id="_4-9-hsetnx" tabindex="-1">4.9 <code>HSETNX</code> <a class="header-anchor" href="#_4-9-hsetnx" aria-label="Permalink to &quot;4.9 \`HSETNX\`&quot;">​</a></h3><ul><li>语法：<code>HSETNX key field value</code></li><li>功能：只有这个 <code>key</code> 的字段不存在才能设置</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; HSETNX myhash field &quot;Hello&quot;</span></span>
<span class="line"><span>(integer) 1</span></span>
<span class="line"><span>redis&gt; HSETNX myhash field &quot;World&quot;</span></span>
<span class="line"><span>(integer) 0</span></span>
<span class="line"><span>redis&gt; HGET myhash field</span></span>
<span class="line"><span>&quot;Hello&quot;</span></span></code></pre></div><h2 id="_5-list-类型" tabindex="-1">5 List 类型 <a class="header-anchor" href="#_5-list-类型" aria-label="Permalink to &quot;5 List 类型&quot;">​</a></h2><p>Redis 的 List 类型与 Java 的 LinkedList 类似，可以看作双向链表。既可以正向检索也可以反向检索。</p><h3 id="_5-1-lpush" tabindex="-1">5.1 <code>LPUSH</code> <a class="header-anchor" href="#_5-1-lpush" aria-label="Permalink to &quot;5.1 \`LPUSH\`&quot;">​</a></h3><ul><li>语法：<code>LPUSH key element [element ...]</code></li><li>功能：向列表左侧插入元素，<code>key</code> 不存在则会创建</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; LPUSH mylist &quot;world&quot;</span></span>
<span class="line"><span>(integer) 1</span></span>
<span class="line"><span>redis&gt; LPUSH mylist &quot;hello&quot;</span></span>
<span class="line"><span>(integer) 2</span></span></code></pre></div><h3 id="_5-2-rpush" tabindex="-1">5.2 <code>RPUSH</code> <a class="header-anchor" href="#_5-2-rpush" aria-label="Permalink to &quot;5.2 \`RPUSH\`&quot;">​</a></h3><ul><li>语法：<code>RPUSH key element [element ...]</code></li><li>功能：向列表右侧插入元素，<code>key</code> 不存在则会创建</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; RPUSH mylist &quot;one&quot; &quot;two&quot; &quot;three&quot; &quot;four&quot; &quot;five&quot;</span></span>
<span class="line"><span>(integer) 5</span></span></code></pre></div><h3 id="_5-3-lpop" tabindex="-1">5.3 <code>LPOP</code> <a class="header-anchor" href="#_5-3-lpop" aria-label="Permalink to &quot;5.3 \`LPOP\`&quot;">​</a></h3><ul><li>语法：<code>LPOP key [count]</code></li><li>功能：从列表左侧移除元素</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; RPUSH mylist &quot;one&quot; &quot;two&quot; &quot;three&quot; &quot;four&quot; &quot;five&quot;</span></span>
<span class="line"><span>(integer) 5</span></span>
<span class="line"><span>redis&gt; LPOP mylist</span></span>
<span class="line"><span>&quot;one&quot;</span></span>
<span class="line"><span>redis&gt; LPOP mylist 2</span></span>
<span class="line"><span>1) &quot;two&quot;</span></span>
<span class="line"><span>2) &quot;three&quot;</span></span></code></pre></div><h3 id="_5-4-rpop" tabindex="-1">5.4 <code>RPOP</code> <a class="header-anchor" href="#_5-4-rpop" aria-label="Permalink to &quot;5.4 \`RPOP\`&quot;">​</a></h3><ul><li>语法：<code>RPOP key [count]</code></li><li>功能：从列表右侧移除元素</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; RPUSH mylist &quot;one&quot; &quot;two&quot; &quot;three&quot; &quot;four&quot; &quot;five&quot;</span></span>
<span class="line"><span>(integer) 5</span></span>
<span class="line"><span>redis&gt; RPOP mylist</span></span>
<span class="line"><span>&quot;five&quot;</span></span>
<span class="line"><span>redis&gt; RPOP mylist 2</span></span>
<span class="line"><span>1) &quot;four&quot;</span></span>
<span class="line"><span>2) &quot;three&quot;</span></span></code></pre></div><h3 id="_5-5-lrange" tabindex="-1">5.5 <code>LRANGE</code> <a class="header-anchor" href="#_5-5-lrange" aria-label="Permalink to &quot;5.5 \`LRANGE\`&quot;">​</a></h3><ul><li>语法：<code>LRANGE key start stop</code></li><li>功能：返回索引在 <code>[start stop]</code> 内的所有元素</li></ul><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>redis&gt; RPUSH mylist &quot;one&quot; &quot;two&quot; &quot;three&quot;</span></span>
<span class="line"><span>(integer) 3</span></span>
<span class="line"><span>redis&gt; LRANGE mylist 0 0</span></span>
<span class="line"><span>1) &quot;one&quot;</span></span>
<span class="line"><span>redis&gt; LRANGE mylist -3 2</span></span>
<span class="line"><span>1) &quot;one&quot;</span></span>
<span class="line"><span>2) &quot;two&quot;</span></span>
<span class="line"><span>3) &quot;three&quot;</span></span>
<span class="line"><span>redis&gt; LRANGE mylist -100 100</span></span>
<span class="line"><span>1) &quot;one&quot;</span></span>
<span class="line"><span>2) &quot;two&quot;</span></span>
<span class="line"><span>3) &quot;three&quot;</span></span>
<span class="line"><span>redis&gt; LRANGE mylist 5 10</span></span>
<span class="line"><span>(empty array)</span></span></code></pre></div>`,95)]))}const q=e(t,[["render",i]]);export{h as __pageData,q as default};
