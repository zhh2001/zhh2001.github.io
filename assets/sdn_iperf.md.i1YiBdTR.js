import{_ as a,c as e,o as i,ag as n}from"./chunks/framework.BZemHgQ6.js";const k=JSON.parse('{"title":"iPerf","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"sdn/iperf.md","filePath":"sdn/iperf.md"}'),t={name:"sdn/iperf.md"};function p(l,s,h,d,c,o){return i(),e("div",null,s[0]||(s[0]=[n(`<h1 id="iperf" tabindex="-1">iPerf <a class="header-anchor" href="#iperf" aria-label="Permalink to &quot;iPerf&quot;">​</a></h1><p>在 Mininet 中，经常会需要用到 iPerf 来模拟网络流量。iPerf 是一款网络性能测试工具，用于测量网络带宽、延迟、抖动和丢包率等指标。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span></span></code></pre></div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><p>在服务端运行下面的命令启动 iPerf 服务器：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span></span></code></pre></div><p>在客户端运行以下命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [IP]</span></span></code></pre></div><p>后面的例子都在 Mininet 环境中，我开了两台主机 <code>h1</code> 和 <code>h2</code>，IP 分别是 <code>10.0.1.1</code> 和 <code>10.0.1.2</code>，并且在 <code>h2</code> 上启动了 iPerf 服务器：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre></div><h2 id="常规选项" tabindex="-1">常规选项 <a class="header-anchor" href="#常规选项" aria-label="Permalink to &quot;常规选项&quot;">​</a></h2><h3 id="f-format-bkmabkma" tabindex="-1"><code>-f, --format [bkmaBKMA]</code> <a class="header-anchor" href="#f-format-bkmabkma" aria-label="Permalink to &quot;\`-f, --format [bkmaBKMA]\`&quot;">​</a></h3><p>指定打印出来的带宽的数字格式：</p><table tabindex="0"><thead><tr><th>字母</th><th style="text-align:right;">格式</th><th>|</th><th>字母</th><th style="text-align:right;">格式</th></tr></thead><tbody><tr><td><code>b</code></td><td style="text-align:right;"><code>bits/sec</code></td><td>|</td><td><code>B</code></td><td style="text-align:right;"><code>Bytes/sec</code></td></tr><tr><td><code>k</code></td><td style="text-align:right;"><code>Kbits/sec</code></td><td>|</td><td><code>K</code></td><td style="text-align:right;"><code>KBytes/sec</code></td></tr><tr><td><code>m</code></td><td style="text-align:right;"><code>Mbits/sec</code></td><td>|</td><td><code>M</code></td><td style="text-align:right;"><code>MBytes/sec</code></td></tr><tr><td><code>g</code></td><td style="text-align:right;"><code>Gbits/sec</code></td><td>|</td><td><code>G</code></td><td style="text-align:right;"><code>GBytes/sec</code></td></tr><tr><td><code>a</code></td><td style="text-align:right;"><code>adaptive bits/sec</code></td><td>|</td><td><code>A</code></td><td style="text-align:right;"><code>adaptive Bytes/sec</code></td></tr></tbody></table><p>自适应格式根据需要在千（kilo-）和兆（mega-）之间进行选择。</p><p>默认值为 <code>a</code>。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p><code>K = Kilo = 1024</code><br><code>M = Mega = 1024 * 1024</code><br><code>G = Giga = 1024 * 1024 * 1024</code></p></div><h4 id="示例-使用默认值的输出格式" tabindex="-1">示例：使用默认值的输出格式 <a class="header-anchor" href="#示例-使用默认值的输出格式" aria-label="Permalink to &quot;示例：使用默认值的输出格式&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span></span></code></pre></div><p>输出信息：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 55414 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line highlighted"><span>[  1] 0.0000-10.3188 sec  46.5 MBytes  37.8 Mbits/sec</span></span></code></pre></div><p>可以看到带宽的单位是 <code>Mbits/sec</code>。</p><h4 id="示例-指定参数为-k-的输出格式" tabindex="-1">示例：指定参数为 <code>K</code> 的输出格式 <a class="header-anchor" href="#示例-指定参数为-k-的输出格式" aria-label="Permalink to &quot;示例：指定参数为 \`K\` 的输出格式&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> K</span></span></code></pre></div><p>输出信息：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 55414 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval            Transfer      Bandwidth</span></span>
<span class="line highlighted"><span>[  1] 0.0000-10.2313 sec  43520 KBytes  4254 KBytes/sec</span></span></code></pre></div><p>可以看到带宽的单位是 <code>KBytes/sec</code>。</p><h3 id="i-interval-n" tabindex="-1"><code>-i, --interval [n]</code> <a class="header-anchor" href="#i-interval-n" aria-label="Permalink to &quot;\`-i, --interval [n]\`&quot;">​</a></h3><p>设置周期性带宽、抖动和丢失报告之间的间隔时间（秒）。如果非零，每隔 <code>n</code> 秒带宽就会生成一份报告。如果为 <code>0</code>，则不打印定期报告。</p><p>默认值为 <code>0</code>。</p><h4 id="示例-指定每两秒打印一次报告" tabindex="-1">示例：指定每两秒打印一次报告 <a class="header-anchor" href="#示例-指定每两秒打印一次报告" aria-label="Permalink to &quot;示例：指定每两秒打印一次报告&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre></div><p>输出信息：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 55414 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line highlighted"><span>[  1] 0.0000- 2.0000 sec  10.9 MBytes  45.6 Mbits/sec</span></span>
<span class="line highlighted"><span>[  1] 2.0000- 4.0000 sec  10.0 MBytes  41.9 Mbits/sec</span></span>
<span class="line highlighted"><span>[  1] 4.0000- 6.0000 sec  9.00 MBytes  37.7 Mbits/sec</span></span>
<span class="line highlighted"><span>[  1] 6.0000- 8.0000 sec  9.00 MBytes  37.7 Mbits/sec</span></span>
<span class="line highlighted"><span>[  1] 8.0000-10.0000 sec  9.50 MBytes  39.8 Mbits/sec</span></span>
<span class="line highlighted"><span>[  1] 0.0000-10.4072 sec  48.5 MBytes  39.1 Mbits/sec</span></span></code></pre></div><h3 id="l-len-n-km" tabindex="-1"><code>-l, --len [n][KM]</code> <a class="header-anchor" href="#l-len-n-km" aria-label="Permalink to &quot;\`-l, --len [n][KM]\`&quot;">​</a></h3><p>要读写的缓冲区长度。TCP 默认为 <code>8KB</code>，UDP 为 <code>1470B</code>。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>对于 UDP 来说，这是数据报大小，当使用 IPv6 寻址时，需要将其降低到 <code>1450B</code> 或更低，避免碎片化。</p></div><h3 id="m-print-mss" tabindex="-1"><code>-m, --print_mss</code> <a class="header-anchor" href="#m-print-mss" aria-label="Permalink to &quot;\`-m, --print_mss\`&quot;">​</a></h3><p>打印 TCP MSS（Maximum Segment Size，最大段大小）的大小，以及观察到的读取大小。</p><p>MSS 通常等于 MTU（Maximum Transmission Unit，最大传输单元）减去 40 字节（用于 TCP/IP 头部）。由于 IP 选项的额外头部空间，一般会报告一个略小的 MSS。</p><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span></span></code></pre></div><p>输出信息：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line highlighted"><span>MSS size 536 bytes</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 53052 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line"><span>[  1] 0.0000-10.3415 sec  52.9 MBytes  42.9 Mbits/sec</span></span></code></pre></div><h3 id="p-port-n" tabindex="-1"><code>-p, --port [n]</code> <a class="header-anchor" href="#p-port-n" aria-label="Permalink to &quot;\`-p, --port [n]\`&quot;">​</a></h3><p>服务器监听的端口，以及客户端连接的服务器端口。</p><p>默认值为 <code>5001</code>。</p><h3 id="u-udp" tabindex="-1"><code>-u, --udp</code> <a class="header-anchor" href="#u-udp" aria-label="Permalink to &quot;\`-u, --udp\`&quot;">​</a></h3><p>使用 UDP 协议进行传输。</p><h4 id="示例-1" tabindex="-1">示例 <a class="header-anchor" href="#示例-1" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span></span></code></pre></div><p>输出信息：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--------------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, UDP port 5001</span></span>
<span class="line"><span>Sending 1470 byte datagrams, IPG target: 11215.21 us (kalman adjust)</span></span>
<span class="line"><span>UDP buffer size:  208 KByte (default)</span></span>
<span class="line"><span>--------------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 60142 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line"><span>[  1] 0.0000-10.0157 sec  1.25 MBytes  1.05 Mbits/sec</span></span></code></pre></div><h3 id="w-window-n-km" tabindex="-1"><code>-w, --window [n][KM]</code> <a class="header-anchor" href="#w-window-n-km" aria-label="Permalink to &quot;\`-w, --window [n][KM]\`&quot;">​</a></h3><p>将套接字缓冲区大小设置为 <code>n</code>。对 TCP 来说，这会设置 TCP 窗口大小。但对于 UDP，它只是接收数据报的缓冲区，限制最大的可接收数据报大小。</p><h3 id="v" tabindex="-1"><code>-V</code> <a class="header-anchor" href="#v" aria-label="Permalink to &quot;\`-V\`&quot;">​</a></h3><p>iPerf 1.6 版本开始支持。</p><p>绑定到一个 IPv6 地址。</p><p>服务端命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -V</span></span></code></pre></div><p>客户端命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [服务端的IPv6地址] -V</span></span></code></pre></div><h3 id="v-version" tabindex="-1"><code>-v, --version</code> <a class="header-anchor" href="#v-version" aria-label="Permalink to &quot;\`-v, --version\`&quot;">​</a></h3><p>打印版本信息。</p><h4 id="示例-2" tabindex="-1">示例 <a class="header-anchor" href="#示例-2" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><p>输出结果：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>iperf version 2.1.9 (14 March 2023) pthreads</span></span></code></pre></div><p>末尾的 <code>pthreads</code> 意思是 <code>POSIX threads</code>。此外还可能是别的值，如 <code>win32 threads</code> 意思是 <code>Microsoft Win32 threads</code>，又或者 <code>single threaded</code>。</p><h2 id="服务端选项" tabindex="-1">服务端选项 <a class="header-anchor" href="#服务端选项" aria-label="Permalink to &quot;服务端选项&quot;">​</a></h2><h3 id="s-server" tabindex="-1"><code>-s, --server</code> <a class="header-anchor" href="#s-server" aria-label="Permalink to &quot;\`-s, --server\`&quot;">​</a></h3><p>启动 iPerf 服务器。</p><h3 id="d" tabindex="-1"><code>-D</code> <a class="header-anchor" href="#d" aria-label="Permalink to &quot;\`-D\`&quot;">​</a></h3><p>iPerf v1.2 版本开始支持。</p><p>在 Unix 上，作为守护进程（daemon）运行。在支持服务的 Win32 上，作为服务运行。</p><h3 id="r" tabindex="-1"><code>-R</code> <a class="header-anchor" href="#r" aria-label="Permalink to &quot;\`-R\`&quot;">​</a></h3><p>iPerf v1.2 版本开始支持。仅在 Windows 上有效。</p><p>移除 iPerf 服务。</p><h3 id="o" tabindex="-1"><code>-o</code> <a class="header-anchor" href="#o" aria-label="Permalink to &quot;\`-o\`&quot;">​</a></h3><p>iPerf v1.2 版本开始支持。仅在 Windows 上有效。</p><p>将输出的信息重定向到指定文件。</p><h3 id="c-client-host" tabindex="-1"><code>-c, --client [host]</code> <a class="header-anchor" href="#c-client-host" aria-label="Permalink to &quot;\`-c, --client [host]\`&quot;">​</a></h3><p>iPerf 服务器指定 <code>-c [host]</code> 将会限制服务器只就受指定主机的连接。</p><h3 id="p-parallel-n" tabindex="-1"><code>-P, --parallel [n]</code> <a class="header-anchor" href="#p-parallel-n" aria-label="Permalink to &quot;\`-P, --parallel [n]\`&quot;">​</a></h3><p>用于指定服务器的最大并行连接数。</p><p>默认值为 <code>0</code>。表示不限制并行连接数。服务器会接受来自客户端的任意数量的连接（仅受系统资源限制）。</p><h2 id="客户端选项" tabindex="-1">客户端选项 <a class="header-anchor" href="#客户端选项" aria-label="Permalink to &quot;客户端选项&quot;">​</a></h2><h3 id="b-bandwidth-n-km" tabindex="-1"><code>-b, --bandwidth [n][KM]</code> <a class="header-anchor" href="#b-bandwidth-n-km" aria-label="Permalink to &quot;\`-b, --bandwidth [n][KM]\`&quot;">​</a></h3><p>指定带宽，单位为 <code>bit/sec</code>。</p><h4 id="示例-3" tabindex="-1">示例 <a class="header-anchor" href="#示例-3" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2M</span></span></code></pre></div><p>输出结果：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 57368 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line"><span>[  1] 0.0000-10.5852 sec  2.75 MBytes  2.18 Mbits/sec</span></span></code></pre></div><h3 id="c-client-host-1" tabindex="-1"><code>-c, --client [host]</code> <a class="header-anchor" href="#c-client-host-1" aria-label="Permalink to &quot;\`-c, --client [host]\`&quot;">​</a></h3><p>在客户端模式下运行 iPerf，连接到指定地址的 iPerf 服务器。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span></span></code></pre></div><h3 id="d-dualtest" tabindex="-1"><code>-d, --dualtest</code> <a class="header-anchor" href="#d-dualtest" aria-label="Permalink to &quot;\`-d, --dualtest\`&quot;">​</a></h3><p>用于启用双向测试模式​（dual test mode），即同时测试上行和下行带宽。这意味着客户端和服务器会同时发送和接收数据，从而模拟双向网络流量。</p><h4 id="示例-4" tabindex="-1">示例 <a class="header-anchor" href="#示例-4" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>输出结果：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Server listening on TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 43076 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[  2] local 10.0.1.1 port 5001 connected with 10.0.1.2 port 43448</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line"><span>[  2] 0.0000-10.6654 sec  24.0 MBytes  18.9 Mbits/sec</span></span>
<span class="line"><span>[  1] 0.0000-10.8313 sec  31.0 MBytes  24.0 Mbits/sec</span></span></code></pre></div><h3 id="r-tradeoff" tabindex="-1"><code>-r, --tradeoff</code> <a class="header-anchor" href="#r-tradeoff" aria-label="Permalink to &quot;\`-r, --tradeoff\`&quot;">​</a></h3><p>用于启用双向交替测试模式​（bidirectional alternating test mode）。与 <code>-d</code> 参数（同时双向测试）不同，<code>-r</code> 参数会先测试一个方向，然后再测试另一个方向，而不是同时进行。</p><h4 id="示例-5" tabindex="-1">示例 <a class="header-anchor" href="#示例-5" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><p>输出结果：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Server listening on TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 47896 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line"><span>[  1] 0.0000-10.5505 sec  47.5 MBytes  37.8 Mbits/sec</span></span>
<span class="line"><span>[  2] local 10.0.1.1 port 5001 connected with 10.0.1.2 port 47030</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line"><span>[  2] 0.0000-10.4139 sec  46.9 MBytes  37.8 Mbits/sec</span></span></code></pre></div><h3 id="t-time-n" tabindex="-1"><code>-t, --time [n]</code> <a class="header-anchor" href="#t-time-n" aria-label="Permalink to &quot;\`-t, --time [n]\`&quot;">​</a></h3><p>用于指定测试的持续时间（以秒为单位）。</p><p>默认值为 <code>10</code>。</p><h4 id="示例-6" tabindex="-1">示例 <a class="header-anchor" href="#示例-6" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>在前面其他的示例中可以发现，每次测试时间都是 10 秒出头。接下来测试一个 60 秒的持续时间。</p><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span></span></code></pre></div><p>输出结果：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 55366 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval             Transfer     Bandwidth</span></span>
<span class="line"><span>[  1] 0.0000-60.6649 sec   320 MBytes  44.2 Mbits/sec</span></span></code></pre></div><h3 id="p-parallel-n-1" tabindex="-1"><code>-P, --parallel [n]</code> <a class="header-anchor" href="#p-parallel-n-1" aria-label="Permalink to &quot;\`-P, --parallel [n]\`&quot;">​</a></h3><p>用于指定<strong>并行连接数</strong>​（parallel connections），即同时发起多个连接进行测试。通过增加并行连接数，可以更充分地利用网络带宽，尤其是在高带宽或高延迟的网络环境中。</p><h4 id="示例-建立-4-个连接开始并行测试" tabindex="-1">示例：建立 4 个连接开始并行测试 <a class="header-anchor" href="#示例-建立-4-个连接开始并行测试" aria-label="Permalink to &quot;示例：建立 4 个连接开始并行测试&quot;">​</a></h4><p>执行命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mininet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">h1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iperf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> h2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span></code></pre></div><p>输出结果：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>Client connecting to 10.0.1.2, TCP port 5001</span></span>
<span class="line"><span>TCP window size: 85.3 KByte (default)</span></span>
<span class="line"><span>-----------------------------------------------------------------</span></span>
<span class="line"><span>[  4] local 10.0.1.1 port 35008 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[  3] local 10.0.1.1 port 34990 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[  1] local 10.0.1.1 port 34996 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[  2] local 10.0.1.1 port 34974 connected with 10.0.1.2 port 5001</span></span>
<span class="line"><span>[ ID] Interval            Transfer     Bandwidth</span></span>
<span class="line"><span>[  1] 0.0000-10.8666 sec  11.5 MBytes  8.88 Mbits/sec</span></span>
<span class="line"><span>[  3] 0.0000-10.8663 sec  14.6 MBytes  11.3 Mbits/sec</span></span>
<span class="line"><span>[  2] 0.0000-10.9576 sec  10.1 MBytes  7.75 Mbits/sec</span></span>
<span class="line"><span>[  4] 0.0000-10.9563 sec  13.3 MBytes  10.1 Mbits/sec</span></span>
<span class="line"><span>[SUM] 0.0000-10.3611 sec  49.5 MBytes  40.1 Mbits/sec</span></span></code></pre></div><h3 id="t-ttl-n" tabindex="-1"><code>-T, --ttl [n]</code> <a class="header-anchor" href="#t-ttl-n" aria-label="Permalink to &quot;\`-T, --ttl [n]\`&quot;">​</a></h3><p>用于为测试流量设置 ​TTL 值。该参数通常用于测试网络路径或排查路由问题。</p><h3 id="f" tabindex="-1"><code>-F</code> <a class="header-anchor" href="#f" aria-label="Permalink to &quot;\`-F\`&quot;">​</a></h3><p>iPerf v1.2 版本开始支持。</p><p>用于指定一个文件作为测试数据源。iPerf 会将指定文件的内容作为测试数据发送到服务器端，而不是使用随机生成的数据。这种方式可以模拟真实文件传输的场景，测试网络的文件传输性能。</p>`,139)]))}const g=a(t,[["render",p]]);export{k as __pageData,g as default};
